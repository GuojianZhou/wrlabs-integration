From 79fb3a0c3d25b1dfd975958fdcc6cbc69b92c0c6 Mon Sep 17 00:00:00 2001
From: Guojian Zhou <guojian.zhou@windriver.com>
Date: Sat, 15 Jul 2017 10:00:17 +0000
Subject: [PATCH] smartpm: Use the python2.7 default uft-8 encoding

In the python2.7 system-wide module "sitecustomize.py" has initialize the
python runtime environment UTF-8 encoding. But the python-smartpm tool still
want to get the encoding format from locale and "LC_ALL" system environment.

When system does not reset the "LC_ALL", locale.getpreferredencoding() will
always return the "ANSI_X3.4-1968". It will cause the python codecs.read()
can not deal with these NON-ASCII charaters.

So we could get the python runtime encoding format (utf-8) to fix this issue.

smart install the ca-certificates package will print the following error information:
=========================================================================================
Traceback (most recent call last):
  File "/usr/lib64/python2.7/site-packages/smart/backends/rpm/pm.py", line 357, in __call__
    self._process_rpmout()
  File "/usr/lib64/python2.7/site-packages/smart/backends/rpm/pm.py", line 342, in _process_rpmout
    output = self.rpmout.read()
  File "/usr/lib64/python2.7/codecs.py", line 474, in read
    newchars, decodedbytes = self.decode(data, self.errors)
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 467: ordinal not in range(128)

Signed-off-by: Guojian Zhou <guojian.zhou@windriver.com>
---
 smart/backends/rpm/pm.py | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/smart/backends/rpm/pm.py b/smart/backends/rpm/pm.py
index 7b651b5..cae13e8 100644
--- a/smart/backends/rpm/pm.py
+++ b/smart/backends/rpm/pm.py
@@ -31,11 +31,12 @@ from smart.const import INSTALL, REMOVE
 from smart.pm import PackageManager
 from smart import sysconf, iface, Error, _
 
-
-try:
-    ENCODING = locale.getpreferredencoding()
-except locale.Error:
-    ENCODING = "ascii"
+ENCODING = sys.getdefaultencoding()
+if not ENCODING:
+    try:
+        ENCODING = locale.getpreferredencoding()
+    except locale.Error:
+        ENCODING = "ascii"
 
 
 def get_public_key(header):
-- 
2.7.4

